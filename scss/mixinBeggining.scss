// @import "variables.scss";

$linkColor: orange;
$linkColorHover: grey;

$my-contentColorSmall: red;
$my-contentColorMedium: yellow;
$my-contentColorUpperMedium: grey;
$my-contentColorLarge: purple;

%forSmall { 
  background-color: red; 
  border: 1px solid green;
}

$large: 1000px;
$medium: 800px;
$small: 600px;

$forMixin: go;

@mixin respond-to($media) {
  @if $media == 1000 {
    @media only screen and (max-width: $small) {@content;}
  }
  @else if $media == $forMixin {
    @media only screen and (min-width: $small + 1) and (max-width: $medium - 1) { @content; }
  } 
  @else if $media == my-parametr {
    @media only screen and (min-width: $medium) and (max-width: $large - 1) { @content; }
  }
  @else if $media == wide-screns {
    @media only screen and (min-width: $large) { @content; }
  }
}

h1 {
  color: $linkColor;
  &:hover {
    color: $linkColorHover;
  }
}

.my-content {
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: -125px;
  margin-top: -75px;
  height: 150px;
  width: 250px;

  @include respond-to(1000) {background-color: $my-contentColorSmall; border: 5px solid black};
  @include respond-to($forMixin) {background-color: $my-contentColorMedium; border: 5px solid green};
  @include respond-to(my-parametr) {background-color: $my-contentColorUpperMedium; border: 5px solid olive}
  @include respond-to(wide-screns) {background-color: $my-contentColorLarge; border: 5px solid coral};
  // в присьме спрашивал о том как передать больше параметров решение само пришло
  // но все равно хотелось бы услышать ответ на вопрос какой миксин счиатется 
  // сложным а какой приемлимым 
}
